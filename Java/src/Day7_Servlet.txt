ㅁServlet작동순서
웹브라우저->웹서버->웹어플리케이션서버(was)->servlet컨테이너 (스레드생성,서블렛객체생성)

ㅁServlet 라이프사이클(생명주기)
:서블렛은 최초 요청시 객체가 만들어져 메모리에 로딩되고, 이후 요청시에는 기존의 객체를 재활용 따라서 동작속도 빠름
서블렛 객체생성->init():최초한번->doGet(),doPost()->destroy()

ㅁhtml 폼태그의 input
type: 태그종류 지정 (text,password,submit..)
name: input 태그 이름 -> 서버에 전송할떄 이 이름을 쓴다
value: name에 해당하는 값 -> 서버에 전송되는 value값
type submit : form 내의 데이터를 다 전송해준다

ㅁhtml form 태그 2
<form action="~~~" method="~~">
action: 어느곳으로 데이터를 전송할것인지 요청하는곳 (ex)서블릿,jsp,html으로 갈수있다
method: get 방식으로 보낼건지 post방식으로 보낼건지..
get방식: 컨텍스트패스?id=value&id=value
post방식: 컨텍스트패스

ㅁServlet Parameter
Form태그의 submit버튼을 누르면 데이터가 서버에 전송되고 Servlet에서 HttpServletRequest 객체를 이용하여 그 Parameter값을 얻을수 있다
<관련메소드> getParameter(name) -> name을 통해서 value값을 반환받을수 있음
getParametervalues(name) -> checkbox처럼 값이 여러개로 반환되는 객체를 찾을때..
getParameterNames() -> Request 객체의 모든 이름들을 반환받을수있당

Get방식에서 한글처리 : response.setContentType("Text/html; Charset="UTF-8");
POst방식에서 한글처리 : request.setCharacterEncoding("UTF-8") 메소드 사용

ㅁ서블릿 초기화 파라미터 :ServletConfig
특정 서블렛이 생성될때 초기에 필요한 데이터들이 있다. 특정경로 및 아이디 정보 등입니다..
web.xml과 서블렛파일에 기술하는방법 두개가 있습니다
어노테이션을 이용하는 방법:
@WebInitParam 이용

ㅁ데이터공유 
여러 서블렛에서 특정 데이터를 공유해야하는 경우에는
context parameter를 통해 web.xml에 기술하고 여러 서블렛에서 공유가 가능합니다
<context-param></context-param>

ㅁ웹어플리케이션 감시ServletContextListner
웹 어플리케이션 시작과 종료시 호출


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ



ㅁJSP 태그

지시자: <%@  %>:페이지 속성
주석: <%-- --%>

선언: <%! %>:변수,메소드 선언 ex) String str ="ABC";
표현식: <%= %>: 결과값
스크립트릿:<% %>:JAVA코드
액션태그: <jsp:action>

ㅁJSP동작원리
클라이언트가 웹브라우저로 hello.jsp를 요청하게되면
jsp컨테이너가 jsp파일을 java로 변환함
변환된 파일은 다시 class로 변환되고 클라이언트에게 html형식응로 응답됨

ㅁrequest,response 객체의 이해
request: 웹브라우저를 통해 서버에 어떤 정보를 요청하는것
요청정보는 request객체가 관리

ㅁresponse: 웹브라우저의 요청에 응답하는것
응답정보는 response 객체가 관리
